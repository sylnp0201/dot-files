execute pathogen#infect()
syntax enable
filetype on
filetype plugin on
filetype indent on

set nocompatible
set runtimepath^=~/.vim/bundle/ctrlp.vim
set number
set ruler
set showcmd
set expandtab
set autoindent
set smartindent
set tabstop=2
set softtabstop=2
set shiftwidth=2
set wildmenu
set lazyredraw
set incsearch
set hlsearch
set clipboard=unnamed
set pastetoggle=<C-L>

let g:ctrlp_custom_ignore = {
  \ 'dir': 'node_modules'
  \ }
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0

nnoremap <leader><space> :nohlsearch<CR>
nnoremap j gj
nnoremap k gk
nnoremap <C-N> :set invnumber<CR>

vmap <TAB> >gv
vmap <S-TAB> <gv
map <F2> :NERDTreeToggle<CR>

autocmd BufWritePre * :%s/\s\+$//e

function! Smart_TabComplete()
  let line = getline('.')                         " current line

  let substr = strpart(line, -1, col('.')+1)      " from the start of the current
                                                  " line to one character right
                                                  " of the cursor
  let substr = matchstr(substr, "[^ \t]*$")       " word till cursor
  if (strlen(substr)==0)                          " nothing to match on empty string
    return "\<tab>"
  endif
  let has_period = match(substr, '\.') != -1      " position of period, if any
  let has_slash = match(substr, '\/') != -1       " position of slash, if any
  if (!has_period && !has_slash)
    return "\<C-X>\<C-P>"                         " existing text matching
  elseif ( has_slash )
    return "\<C-X>\<C-F>"                         " file matching
  else
    return "\<C-X>\<C-O>"                         " plugin matching
  endif
endfunction

inoremap <tab> <c-r>=Smart_TabComplete()<CR>
